version: 2.1

jobs:
  make-build:
    docker:
      - image: python:3.7.3-stretch

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-

      - run:
          name: Make install,lint and build
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install

      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  dockerhub-upload:
    docker:
      - image: circleci/golang:1.15

    working_directory: ~/repo

    steps:
      - checkout

      - setup_remote_docker:
          version: 20.10.14

      - run:
          name: Build docker container
          command: |
            docker build --tag=$DOCKERHUB_IMAGE .
            docker image ls

      - run:
          name: Upload Docker to Dockerhub
          command: |
            echo "Image Details: $DOCKER_IMAGE_NAME"
            docker login -u="$DOCKER_USER" -p="$DOCKER_PASSWORD"
            docker tag $DOCKERHUB_IMAGE $DOCKER_USER/$DOCKERHUB_IMAGE:$CIRCLE_WORKFLOW_ID
            docker push $DOCKER_USER/$DOCKERHUB_IMAGE:$CIRCLE_WORKFLOW_ID

  spin-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yum install -y tar gzip
      - run:
          name: Setup Network for EKS Cluster
          command: |
            aws cloudformation deploy \
              --template-file Cloudformation/SetupClusterNetwork.yml \
              --tags project=${ENVIRONMENT_TAG}-project \
              --stack-name "${ENVIRONMENT_TAG}-eks-network" \
              --region ${AWS_DEFAULT_REGION} \
              --parameter-overrides file://Cloudformation/SetupClusterNetwork-params.json
      - run:
          name: Setup EKS Cluster
          command: |
            aws cloudformation deploy \
              --template-file Cloudformation/CreateEKSCluster.yml \
              --tags project=${ENVIRONMENT_TAG}-project \
              --stack-name "${ENVIRONMENT_TAG}-eks-cluster" \
              --region ${AWS_DEFAULT_REGION} \
              --parameter-overrides file://Cloudformation/CreateEKSCluster-params.json \
              --capabilities CAPABILITY_NAMED_IAM
          no_output_timeout: 15m
      - run:
          name: Setup EKS Nodegroup
          command: |
            aws cloudformation deploy \
              --template-file Cloudformation/CreateClusterNodes.yml \
              --tags project=${ENVIRONMENT_TAG}-project \
              --stack-name "${ENVIRONMENT_TAG}-eks-nodegroup" \
              --region ${AWS_DEFAULT_REGION} \
              --parameter-overrides file://Cloudformation/CreateClusterNodes-params.json \
              --capabilities CAPABILITY_NAMED_IAM
      - run:
          name: Configure Nodegroup management
          command: |
            aws cloudformation deploy \
              --template-file Cloudformation/SetupClusterNodegroup.yml \
              --tags project=${ENVIRONMENT_TAG}-project \
              --stack-name "${ENVIRONMENT_TAG}-eks-management" \
              --region ${AWS_DEFAULT_REGION} \
              --parameter-overrides file://Cloudformation/SetupClusterNodegroup-params.json \
              --output text >> ~/DeployMessage.txt
            cat ~/DeployMessage.txt

  setup-infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "d4:2f:91:66:b5:0d:84:24:4a:09:2c:d6:8a:c1:0f:91"
      - attach_workspace:
          at: ~/
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
      - run:
          name: setup management server
          command: |
            if grep -q "No changes to deploy" ~/DeployMessage.txt
              then
                cat ~/inventory.txt
                echo "Our setup hosts are already configured"
              else
                cat ~/inventory.txt
                cd ansible
                ansible-playbook -i ~/inventory.txt configure-server.yml
              fi

  


workflows:
  default:
    jobs:
      - make-build
      - dockerhub-upload:
          requires:
            - make-build
          filters:
            branches:
              only: [ main ]
      - spin-infrastructure:
          filters:
            branches:
              only: [ main ]
      - setup-infrastructure:
          requires:
            - spin-infrastructure